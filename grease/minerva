#!/usr/bin/env php
<?php

require_once __DIR__.'/vendor/autoload.php';

use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Question\ConfirmationQuestion;
use Symfony\Component\Console\Helper\QuestionHelper;

class DatabaseInitCommand extends Command
{
    protected static $defaultName = 'database:init';

    protected function configure()
    {
        $this->setDescription('Create the database structure from an SQL file');
        $this->addOption('host', null, InputOption::VALUE_OPTIONAL, 'Database host', 'localhost');
        $this->addOption('user', null, InputOption::VALUE_OPTIONAL, 'Database user', 'root');
        $this->addOption('password', null, InputOption::VALUE_OPTIONAL, 'Database user password', '');
        $this->addOption('database', null, InputOption::VALUE_OPTIONAL, 'Database name', '');
        $this->addOption('force', null, InputOption::VALUE_NONE, 'Delete the existing database if it exists');
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        require_once __DIR__ . '/' . '.env.php';

        $file = __DIR__ . '/database/schema/main.sql';

        $host = $_ENV['DB_SERVIDOR'];
        $user = $_ENV['DB_USUARIO'];
        $password = $_ENV['DB_SENHA'];
        $database = $_ENV['DB_NOME'];
        $force = $input->getOption('force');

        $sql = file_get_contents($file);

        $conn = new mysqli($host, $user, $password);

        if ($conn->connect_error) {
            die("Failed to connect to the database: " . $conn->connect_error);
        }

        $sqlCheckDb = "SELECT COUNT(*) as count FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='$database'";
        $result = $conn->query($sqlCheckDb);
        $row = $result->fetch_assoc();
        $dbExists = $row['count'] > 0;

        if ($dbExists && !$force) {
            $question = new ConfirmationQuestion("The database '$database' already exists. Do you want to delete it and create a new one? [y/N]");
            $helper = new QuestionHelper();
            $confirm = $helper->ask($input, $output, $question);

            if (!$confirm) {
                $output->writeln("Operation canceled by the user.");
                return Command::SUCCESS;
            }

            $sqlDropDb = "DROP DATABASE `$database`";
            if (!$conn->query($sqlDropDb)) {
                die("Error deleting the existing database: " . $conn->error);
            }
            $output->writeln("Database '$database' deleted successfully.");
        }

        $sqlCreateDb = "CREATE DATABASE IF NOT EXISTS `$database`";
        if (!$conn->query($sqlCreateDb)) {
            die("Error creating the database: " . $conn->error);
        }

        $output->writeln("Database '$database' created successfully.");

        if (!$conn->select_db($database)) {
            die("Error selecting the database: " . $conn->error);
        }

        if (!$conn->multi_query($sql)) {
            die("Error creating the database structure: " . $conn->error);
        }

        $output->writeln("Database structure created successfully.");

        $conn->close();

        $output->writeln("Database initialization completed.");

        return Command::SUCCESS;
    }
}

use Symfony\Component\Console\Application;

$application = new Application();
$application->add(new DatabaseInitCommand());
$application->run();
